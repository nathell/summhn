(ns summhn.output
  (:require [clojure.java.io :as io]
            [hiccup2.core :as hiccup]
            [summhn.config :as config])
  (:import java.util.Date))

(defn layout [content]
  [:html
   [:head
    [:meta {:charset "utf-8"}]
    [:meta {:name "viewport" :content "width=device-width, initial-scale=1"}]
    [:title "Autosummarized HN"]
    [:link {:rel "stylesheet" :href "https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css"}]
    [:base {:href (config/get :deploy-url)}]
    [:style ".content dl dd { margin-left: 0; margin-bottom: 1.5rem; } .content dl dt { font-size: 1.5rem; } "]]
   [:body
    [:nav.navbar {:role "navigation" :aria-label "main navigation"}
     [:div.navbar-brand
      [:h1.title.px-5.py-4
       [:a {:href "index.html"} "Autosummarized HN"]]]
     [:div.navbar-menu.is-active
      [:div.navbar-start
       [:a.navbar-item {:href "about.html"} "About"]
       [:a.navbar-item {:href "previously"} "Previously"]]
      [:div.navbar-end
       [:div.navbar-item "Generated on " (str (Date.))]]]]
    [:section.section
     content]]])

(defn generate [items]
  (layout
   [:div.container.px-3
      [:p.block.is-size-6
       [:em "All summaries have been generated automatically by GPT-3. No responsibility is claimed for their contents nor its accuracy."]]
      [:ol.items
       (for [{:keys [title time score by xurl item summary] :as entry} items
             :let [hn-url (str "https://news.ycombinator.com/item?id=" item)]]
         [:li.item.block
          [:p.title.is-4.mb-0 [:a {:href (or xurl hn-url)} title]]
          [:p.block "posted on " (str (Date. (* time 1000))) " by " by " | " [:a {:href hn-url} "view on HN"]]
          [:p.subtitle.is-5 summary]])]]))

(defn about []
  (layout
   [:div.content.container
    [:p.title "FAQ"]
    [:dl
     [:dt "What is this?"]
     [:dd
      [:a {:href "https://news.ycombinator.com/"} "Hacker News"]
      ", but with one-sentence summaries automatically generated by "
      [:a {:href "https://openai.com/"} "GPT-3"]
      "."]
     [:dt "Why?"]
     [:dd "Because I can. Because it's amusing. And because it might actually save me (and perhaps someone else?) time, by helping to decide what to read."]
     [:dt "How?"]
     [:dd "Every day at 16:00 UTC, the script gets the top 30 HN posts (with the help of HN API), then downloads those that point to HTML pages, cleans them up (with "
      [:a {:href "https://github.com/chimbori/crux/"} "Crux"]
      "), and then for each of them, tells GPT-3: "
      [:em "Summarize the following article in one sentence: [article]."]
      " That's it, really. To keep the request/response sizes within API limits, I trim the article at sentence boundary at around 3000 characters."]
     [:dt "So it's only updated once every 24 hours? Why not more often?"]
     [:dd "Couple reasons."
      [:ul
       [:li "My free GPT-3 allowance has ended and I'm now on a paid plan. The costs can quickly add up: with the current settings, a single run can cost as much as $1.53, although in practice it's more like $0.70. And I'm not monetising this in any way."]
       [:li "OpenAI's rules don't allow fully automated summarization, so there needs to be a human in the loop. I need to review the results daily and potentially remove them if there's a violation of the "
        [:a {:href "https://beta.openai.com/docs/usage-guidelines/content-policy"} "OpenAI content policy"]
        ". That's a condition on which this site was approved by OpenAI, and it imposes a time obligation on me."]]
      "Before the site went live, I generated updates once every 2 hours. Those are "
      [:a {:href "previously"} "still available"]
      "."]
     [:dt "But I want more frequent updates!"]
     [:dd "You can always run it yourself! The source code is "
      [:a {:href "https://github.com/nathell/summhn"} "available on GitHub."]]
     [:dt "As a human in the loop, will you be editing the summaries?"]
     [:dd "No. I see value in having the summaries fully authored by GPT-3: it helps the audience learn what the model can and can't do. But I will occasionally remove summaries that I deem inappropriate, although this should be rare."]
     [:dt "Why are some articles not summarised or have nonsensical summaries?"]
     [:dd "Possible reasons include: the site is not amenable to scraping; the Crux heuristics that detects the “meaty” content of the page yields wrong results; or maybe GPT-3 just had a hiccup. Failures in scraping or summarization are not retried. Also, HN items without URLs (such as most Ask HNs) are not summarised."]
     [:dt "What model settings are you using?"]
     [:dd "The " [:code "text-davinci-002"] " model with temperature 0.4 and up to 100 tokens in response. See the code for details."]
     [:dt "I'm offended by one of the summaries!"]
     [:dd "Let me know " [:a {:href "mailto:dj@danieljanus.pl"} "by email."]]
     [:dt "Do you intend to run this indefinitely?"]
     [:dd "No. I'm treating this as an experiment. I intend to run it throughout August 2022, after which there will be no more updates – but I'll keep the already generated summaries indefinitely."]
     [:dt "What's the tech stack?"]
     [:dd "A Clojure script gets periodically run by Cron and generates static HTMLs. I cache the articles as well as output from GPT-3, so hopefully I'm not going to go bankrupt."]
     [:dt "What's your OpenAI bill?"]
     [:dd "Dunno yet. I've capped my bill at $20, so if it stops working it's probably because I hit the limit."]
     [:dt "Whodunit?"]
     [:dd [:a {:href "https://danieljanus.pl"} "Daniel Janus."]]]]))

(defn save! [path content]
  (let [path (str (config/get :output-directory) "/" path)]
    (io/make-parents path)
    (spit path (hiccup/html content))))
